/*
游녤 Que se rendericen ciertas partes de la p치gina (carrito, productos, etc.) desde Js.

游녤 Que se utilicen buenas pr치cticas a la hora de estructurar y organizar el c칩digo 
(buena organizaci칩n del c칩digo en general, por ejemplo, buenos nombres de variables, 
    funciones y par치metros).

游녤 Deber치 tener al menos una funcionalidad en la que capture datos de una parte de 
la p치gina y cree un componente HTML en base a eso (Por ejemplo, una funcionalidad de 
agregar un producto al carrito, que tome los datos de dicho producto para renderizarlo
en el mismo).

游녤 Deber치 utilizar localStorage, para persistir datos en el sitio.

游녤 En caso de que lo deseen, podr치n usar alg칰n framework de CSS para el estilado de 
la p치gina.

游녤 El Sitio deber치 ser una landing page totalmente responsive, en la que deber치 haber 
una secci칩n de productos y una p치gina  de login ( como referencia para organizarse, 
pueden tomar la estructura del Nucba NFT y agregar la p치gina de login y registro).

游녤 El sitio debe ser responsivo y tener men칰 hamburguesa (funcional, realizado con js) 
en las resoluciones (mobile, tablet, etc.) que corresponda.

游녤 Deber치 tener la funcionalidad de filtrar por categor칤as. (productos o noticias).

游녤 OPCIONAL: Si conocen alguna API de Productos/Noticias que quieran utilizar en lugar 
de traer los datos  desde un archivo de JS, pueden hacerlo.

游녤 Deber치n entregar el repositorio de Github, con el Vercel de la p치gina vinculado.
*/

const curiosidades = document.querySelector(".curiosidades");
const seccionMarcas = document.querySelector(".section__marcas");
const categoria = document.querySelectorAll(".marca__categoria");
const perfumes = document.querySelector(".perfumes");

const mostrarCuriosidades = () => {
    let i=0;
    curiosidades.innerHTML = curiosidad[0].texto;
    setInterval(() => {
      if (i >= 11) {
        i=0;
      } else {
        curiosidades.innerHTML = curiosidad[i].texto;
        i++;
      }
    }, 15000);
}

const mostrarCategoria = (categoria) => {
  const {id,flanker,imagen,precio,marca} = categoria;
  return `<div class="card">
            <img class="imagen__perfume" src="${imagen}" alt="${flanker}">
            <span class="marca__perfume"><strong>${marca}</strong></span>
            <span class="flanker__perfume">${flanker}</span>
            <span class="precio__perfume">$${precio}</span>
            <button class="boton__perfume">AGREGAR AL CARRITO</button>
          </div>`;
};

const mostrarCategoriaSeleccionada = (categoria) => {
  if (categoria === 'carolinaHerrera') {
    perfumes.innerHTML = chArray.map(mostrarCategoria).join("");
  } else if(categoria === 'dior'){
    perfumes.innerHTML = diorArray.map(mostrarCategoria).join("");
  }
  else if(categoria === 'givenchy'){
    perfumes.innerHTML = givenchyArray.map(mostrarCategoria).join("");
  }
  else if(categoria === 'mugler'){
    perfumes.innerHTML = muglerArray.map(mostrarCategoria).join("");
  }
  else if(categoria === 'pacoRabanne'){
    perfumes.innerHTML = pacoArray.map(mostrarCategoria).join("");
  }
};

const mostrarResultadoCategoria = (e) => {
 const categoriaSeleccionada = e.target.dataset.perfume;
};

const mostrarCategorias = (e) => {
     if(!e.target.classList.contains('marca__categoria'))return;
     mostrarResultadoCategoria(e);
     if (!e.target.dataset.perfume) {
        section__perfumes.innerHTML="";
     } 
     else {
      mostrarCategoriaSeleccionada(e.target.dataset.perfume);
     }
};

const init = () => {
    document.addEventListener('DOMContentLoaded', mostrarCuriosidades);
    seccionMarcas.addEventListener('click', mostrarCategorias);
};

init();